#!/usr/bin/env python3
"""
pro.py

Usage:
    python pro.py <mode: 0|1> <name_or_path> <data.bin> <key_string> <out.bin>

Behavior:
 - Mode 0:
    plaintext = 0x00 || name_len (2 bytes little-endian) || name (UTF-8) || PID (4 bytes little-endian) || data.bin

 - Mode 1:
    plaintext = 0x00 || path_len (2 bytes little-endian) || path (UTF-8) || data.bin

After building plaintext:
 - Apply PKCS7 padding (AES.block_size)
 - Encrypt with AES-CBC using key = SHA256(key_string)
 - Prepend 16-byte random IV to ciphertext and write to out.bin

Notes:
 - Requires pycryptodome (Crypto). psutil is optional but recommended.
"""

import sys
import os
import struct
import hashlib

from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from Crypto.Random import get_random_bytes

def sha256_key_from_input(input_str: str) -> bytes:
    """Return SHA256 digest of input string as AES key (32 bytes)."""
    return hashlib.sha256(input_str.encode('utf-8')).digest()

def find_max_pid_by_name(name: str) -> int:
    """
    Return the maximum PID for processes whose name equals `name` (case-insensitive).
    Try psutil first, then fallback to platform commands (tasklist on Windows, ps on Unix).
    Raises RuntimeError if not found.
    """
    # Try psutil
    try:
        import psutil
        pids = []
        for p in psutil.process_iter(['pid','name']):
            try:
                pname = p.info.get('name') or ''
            except Exception:
                pname = ''
            if pname and pname.lower() == name.lower():
                pids.append(int(p.info['pid']))
        if pids:
            return max(pids)
    except Exception:
        # psutil not installed or other error -> fallback
        pass

    # Windows fallback
    if os.name == 'nt':
        try:
            import subprocess, csv
            out = subprocess.check_output(['tasklist', '/FO', 'CSV'], text=True, encoding='utf-8', errors='ignore')
            pids = []
            for line in out.splitlines():
                try:
                    cols = list(csv.reader([line]))[0]
                    # CSV: "Image Name","PID", ...
                    if len(cols) >= 2:
                        img = cols[0]
                        pid_s = cols[1]
                        if img.lower() == name.lower():
                            pids.append(int(pid_s))
                except Exception:
                    continue
            if pids:
                return max(pids)
        except Exception:
            pass
    else:
        # Unix-like fallback
        try:
            import subprocess
            # 'ps -eo pid=,comm=' prints lines like: "<pid> <command>"
            out = subprocess.check_output(['ps', '-eo', 'pid=,comm='], text=True, encoding='utf-8', errors='ignore')
            pids = []
            for line in out.splitlines():
                try:
                    parts = line.strip().split(None, 1)
                    if len(parts) == 2:
                        pid_s, cmd = parts
                        base = os.path.basename(cmd)
                        if base.lower() == name.lower() or cmd.lower() == name.lower():
                            pids.append(int(pid_s))
                except Exception:
                    continue
            if pids:
                return max(pids)
        except Exception:
            pass

    raise RuntimeError(f"Process named '{name}' not found")

def build_plaintext_mode0(name: str, pid: int, data_bytes: bytes) -> bytes:
    """
    Mode 0 format:
      0x00 || name_len (2 bytes LE) || name (UTF-8) || PID (4 bytes LE) || data.bin
    """
    name_bytes = name.encode('utf-8')
    name_len = len(name_bytes)
    if name_len > 0xFFFF:
        raise ValueError("Name length too long (must fit in 2 bytes)")
    len_bytes = struct.pack('<H', name_len)
    pid_bytes = struct.pack('<I', pid)
    return b'\x00' + len_bytes + name_bytes + pid_bytes + data_bytes

def build_plaintext_mode1(path: str, data_bytes: bytes) -> bytes:
    """
    Mode 1 format:
      0x00 || path_len (2 bytes LE) || path (UTF-8) || data.bin
    """
    path_bytes = path.encode('utf-8')
    path_len = len(path_bytes)
    if path_len > 0xFFFF:
        raise ValueError("Path length too long (must fit in 2 bytes)")
    len_bytes = struct.pack('<H', path_len)
    return b'\x00' + len_bytes + path_bytes + data_bytes

def aes_cbc_encrypt(key: bytes, plaintext: bytes) -> (bytes, bytes):
    """
    Return (iv, ciphertext). IV is 16 random bytes.
    """
    iv = get_random_bytes(16)
    cipher = AES.new(key, AES.MODE_CBC, iv)
    ct = cipher.encrypt(pad(plaintext, AES.block_size))
    return iv, ct

def main(argv):
    if len(argv) != 6:
        print("Usage: python pro.py <0|1> <name_or_path> <data.bin> <key_string> <out.bin>")
        return 2

    _, mode_s, name_or_path, data_path, key_str, out_path = argv

    if mode_s not in ('0','1'):
        print("Mode must be '0' or '1'")
        return 2

    if not os.path.isfile(data_path):
        print(f"Data file not found: {data_path}")
        return 2

    # read data
    try:
        with open(data_path, 'rb') as f:
            data_bytes = f.read()
    except Exception as e:
        print(f"Failed to read data file: {e}")
        return 1

    try:
        if mode_s == '0':
            # need PID
            pid = find_max_pid_by_name(name_or_path)
            plaintext = build_plaintext_mode0(name_or_path, pid, data_bytes)
        else:
            # mode 1: just path + data
            plaintext = build_plaintext_mode1(name_or_path, data_bytes)
    except Exception as e:
        print(f"Error: {e}")
        return 1

    # derive key and encrypt
    key = sha256_key_from_input(key_str)
    iv, ciphertext = aes_cbc_encrypt(key, plaintext)

    # write output: IV (16 bytes) + ciphertext
    try:
        with open(out_path, 'wb') as f:
            f.write(iv)
            f.write(ciphertext)
    except Exception as e:
        print(f"Failed to write output file: {e}")
        return 1

    print(f"Encryption complete. Wrote {len(ciphertext)+16} bytes to {out_path} (16-byte IV + ciphertext).")
    return 0

if __name__ == '__main__':
    sys.exit(main(sys.argv))
